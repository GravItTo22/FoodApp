{
  "meta": {
    "$_GET": [
      {
        "type": "text",
        "name": "logintoken"
      }
    ]
  },
  "exec": {
    "steps": {
      "name": "",
      "module": "core",
      "action": "trycatch",
      "options": {
        "try": {
          "steps": [
            {
              "name": "GetVerify",
              "module": "dbconnector",
              "action": "single",
              "options": {
                "connection": "ClientApp",
                "sql": {
                  "type": "SELECT",
                  "columns": [
                    {
                      "table": "t_user_log",
                      "column": "user_id"
                    },
                    {
                      "table": "mc",
                      "column": "blank2",
                      "alias": "rest_id"
                    }
                  ],
                  "table": {
                    "name": "t_user_log"
                  },
                  "primary": "id",
                  "joins": [
                    {
                      "table": "m_customer",
                      "column": "*",
                      "alias": "mc",
                      "type": "INNER",
                      "clauses": {
                        "condition": "AND",
                        "rules": [
                          {
                            "table": "mc",
                            "column": "id",
                            "operator": "equal",
                            "value": {
                              "table": "t_user_log",
                              "column": "user_id"
                            },
                            "operation": "="
                          }
                        ]
                      },
                      "primary": "id"
                    }
                  ],
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "t_user_log.login_token",
                        "field": "t_user_log.login_token",
                        "type": "string",
                        "operator": "equal",
                        "value": "{{$_GET.logintoken}}",
                        "data": {
                          "table": "t_user_log",
                          "column": "login_token",
                          "type": "text",
                          "columnObj": {
                            "type": "string",
                            "maxLength": -5,
                            "primary": false,
                            "unique": false,
                            "nullable": true,
                            "name": "login_token"
                          }
                        },
                        "operation": "="
                      },
                      {
                        "id": "t_user_log.login_from",
                        "field": "t_user_log.login_from",
                        "type": "string",
                        "operator": "equal",
                        "value": "{{'Android'}}",
                        "data": {
                          "table": "t_user_log",
                          "column": "login_from",
                          "type": "text",
                          "columnObj": {
                            "type": "string",
                            "maxLength": -5,
                            "primary": false,
                            "unique": false,
                            "nullable": true,
                            "name": "login_from"
                          }
                        },
                        "operation": "="
                      },
                      {
                        "id": "mc.user_type_id",
                        "field": "mc.user_type_id",
                        "type": "double",
                        "operator": "equal",
                        "value": "{{4}}",
                        "data": {
                          "table": "mc",
                          "column": "user_type_id",
                          "type": "number",
                          "columnObj": {
                            "type": "reference",
                            "primary": false,
                            "unique": false,
                            "nullable": true,
                            "references": "id",
                            "inTable": "m_user_type",
                            "referenceType": "integer",
                            "onUpdate": "NO ACTION",
                            "onDelete": "NO ACTION",
                            "name": "user_type_id"
                          }
                        },
                        "operation": "="
                      },
                      {
                        "id": "mc.deleted_on",
                        "field": "mc.deleted_on",
                        "type": "datetime",
                        "operator": "is_null",
                        "value": null,
                        "data": {
                          "table": "mc",
                          "column": "deleted_on",
                          "type": "datetime",
                          "columnObj": {
                            "type": "timestamp",
                            "primary": false,
                            "unique": false,
                            "nullable": true,
                            "name": "deleted_on"
                          }
                        },
                        "operation": "IS NULL"
                      }
                    ],
                    "conditional": null,
                    "valid": true
                  },
                  "query": "SELECT t_user_log.user_id, mc.blank2 AS rest_id\nFROM t_user_log\nINNER JOIN m_customer AS mc ON (mc.id = t_user_log.user_id)\nWHERE t_user_log.login_token = :P1 /* {{$_GET.logintoken}} */ AND t_user_log.login_from = :P2 /* {{'Android'}} */ AND mc.user_type_id = :P3 /* {{4}} */ AND mc.deleted_on IS NULL",
                  "params": [
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P1",
                      "value": "{{$_GET.logintoken}}"
                    },
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P2",
                      "value": "{{'Android'}}"
                    },
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P3",
                      "value": "{{4}}"
                    }
                  ]
                }
              },
              "output": false,
              "meta": [
                {
                  "type": "number",
                  "name": "user_id"
                },
                {
                  "type": "text",
                  "name": "rest_id"
                }
              ],
              "outputType": "object"
            },
            {
              "name": "",
              "module": "core",
              "action": "condition",
              "options": {
                "if": "{{GetVerify.user_id}}",
                "then": {
                  "steps": [
                    {
                      "name": "status",
                      "module": "core",
                      "action": "setvalue",
                      "options": {
                        "value": 200
                      },
                      "meta": [],
                      "output": true,
                      "outputType": "text"
                    },
                    {
                      "name": "OrderInfo",
                      "module": "dbupdater",
                      "action": "custom",
                      "options": {
                        "connection": "ClientApp",
                        "sql": {
                          "query": "select count(ro.id) as pending_orders, \n\t(select count(ro1.id) as delivered_orders from r_order ro1 where ro1.status =5 and ro1.rest_id=@rest_id),\n\t(select count(ro2.id) as prepairing_orders from r_order ro2 where ro2.status =3 and ro2.rest_id=@rest_id),\n\t(select count(ro3.id) as returned_orders from r_order ro3 where ro3.status =6 and ro3.rest_id=@rest_id)\nfrom r_order ro where ro.status =1 and ro.rest_id=@rest_id;",
                          "params": [
                            {
                              "name": "@rest_id",
                              "value": "{{GetVerify.rest_id}}",
                              "test": "8"
                            }
                          ]
                        }
                      },
                      "output": true,
                      "meta": [
                        {
                          "name": "pending_orders",
                          "type": "text"
                        },
                        {
                          "name": "delivered_orders",
                          "type": "text"
                        },
                        {
                          "name": "prepairing_orders",
                          "type": "text"
                        },
                        {
                          "name": "returned_orders",
                          "type": "text"
                        }
                      ],
                      "outputType": "array"
                    }
                  ]
                },
                "else": {
                  "steps": [
                    {
                      "name": "status",
                      "module": "core",
                      "action": "setvalue",
                      "options": {
                        "value": 400
                      },
                      "meta": [],
                      "output": true,
                      "outputType": "text"
                    },
                    {
                      "name": "message",
                      "module": "core",
                      "action": "setvalue",
                      "options": {
                        "value": "Unauthorized User"
                      },
                      "meta": [],
                      "output": true,
                      "outputType": "text"
                    }
                  ]
                }
              },
              "outputType": "boolean"
            }
          ]
        },
        "catch": {
          "steps": [
            {
              "name": "status",
              "module": "core",
              "action": "setvalue",
              "options": {
                "value": 400
              },
              "meta": [],
              "output": true,
              "outputType": "text"
            },
            {
              "name": "message_copy",
              "module": "core",
              "action": "setvalue",
              "options": {
                "value": "Suspicious Activity"
              },
              "meta": [],
              "output": true,
              "outputType": "text"
            }
          ]
        }
      }
    }
  }
}